# -*- coding: utf-8 -*-
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery

from mc_server_handler import StatsHandler, SFTPHandler
from boot import config, error

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SFTP
try:
    SFTP: SFTPHandler = SFTPHandler(
                host=config["host"],
                port=config["port"],
                username=config["username"],
                password=config["password"]
            )

    SH: StatsHandler = StatsHandler(
        SFTP
    )
except Exception as e:
    error(f"–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ SFTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ —Å—Ç–∞—Ç—ã


# –ö–ª–∞—Å—Å —Å–æ–æ–±—â–µ–Ω–∏–π
class Msg:
    def __init__(self):
        self.img = "./assets/icon.png"

    async def start(self) -> dict[str, any]:
        start_text: str = (
            "<b>–ü—Ä–∏–≤–µ—Ç!</b> –Ø –±–æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ <b><a href='https://aoba.lol'>aoba.lol</a></b>\n\n"
            "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
            "üïí <b>–¢–æ–ø –ø–æ –Ω–∞–∏–≥—Ä–∞–Ω–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏</b>\n"
            "üéµ <b>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–≤–æ–µ–π –º—É–∑—ã–∫–∏</b>\n"
            "(–ü—Ä–∏–∫—Ä–µ–ø–∏ .mp3 –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å –∫–æ–º–∞–Ω–¥–æ–π <code>/file</code>)\n"
            "üó∫Ô∏è <b>–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç—ã</b>\n\n"
            "üöß <b>–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è:</b>\n"
            "‚Ä¢ –°–∫–∏–Ω—ã –∏–∑ TLauncher\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–Ω–ª–∞–π–Ω–∞\n"
            "‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π\n"
            "‚Ä¢ –ì–∞–π–¥—ã \n–ò –¥—Ä—É–≥–æ–µ!\n\n"
            "–í–µ—Ä—Å–∏—è: <a href=\"https://github.com/Zeragorn-ru/AobaTGB\">1.3.3a</a>\n"
            "<i>Dev by @Zeragorn</i>"
        )

        buttons = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üïí –¢–æ–ø –≤—Ä–µ–º–µ–Ω–∏", callback_data="top_played_time"),
                InlineKeyboardButton(text="üìï –ì–∞–π–¥—ã [WIP]", callback_data="guides")
            ],
            [InlineKeyboardButton(text="‚ù§ –°–ø–∞—Å–∏–±–æ <3", callback_data="gratitude")],
            [InlineKeyboardButton(text="üó∫Ô∏è –ö–∞—Ä—Ç–∞", url="https://aoba.lol/")]
        ])

        return {
            "start_text": start_text,
            "buttons": buttons
        }

    async def top_played_time(self) -> dict:
        played_time: Dict[str, float] = await SH.get_played_time()
        played_time_formated: str = "\n".join([
            f"‚Ä¢ <b>{name}</b> ‚Äî {time:.1f} —á." for name, time in played_time
        ])

        top_played_time_text: str = (
            "<b>üèÜ –¢–æ–ø –ø–æ –Ω–∞–∏–≥—Ä–∞–Ω–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏:</b>\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"{played_time_formated}\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        )

        refresh_start_text = "üîÑ –ù–∞—á–∞—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–¥–æ–∂–¥–∏—Ç–µ..."
        refresh_done_text = "‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!"

        buttons = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh")],
            [InlineKeyboardButton(text="<- –ù–∞–∑–∞–¥", callback_data="start")]
        ])

        return {
            "top_played_time_text": top_played_time_text,
            "buttons": buttons,
            "refresh_start_text": refresh_start_text,
            "refresh_done_text": refresh_done_text
        }

    async def file(self) -> dict[str: str]:
        return {
            "file_not_found": "‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª",
            "file_2_big": "üì¶ –§–∞–π–ª –ø—Ä–µ–≤—ã—à–∞–µ—Ç 20–ú–ë ‚Äî –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞",
            "file_handler": "üõ†Ô∏è –ù–∞—á–∞—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞...",
            "start_load": "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞—á–∞—Ç–∞"
        }

    async def guides(self) -> dict[str: str]:
        text = ("<b>üìñ –ì–∞–π–¥—ã!</b>\n\n"
                "–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–µ-–≤–∞–Ω–∏–ª—å–Ω—ã—Ö –º–µ—Ö–∞–Ω–∏–∫–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞:\n"
                "ü™Ñ <b>–ì–∞–π–¥ –ø–æ –ø–∞–ª–æ—á–∫–µ –æ—Ç–ª–∞–¥–∫–∏</b>\n\n"
                "üìå –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:\n"
                "‚Ä¢ –ì–∞–π–¥ –ø–æ –∫–∞—Å—Ç–æ–º–Ω–æ–π –º—É–∑—ã–∫–µ\n"
                "‚Ä¢ –ì–∞–π–¥ –ø–æ —Å–∫–∏–Ω–∞–º\n"
                "‚Ä¢ –ü–æ—á–∏–Ω–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–º –æ–ø—ã—Ç–æ–º\n"
                "‚Ä¢ –ì–∞–π–¥ –ø–æ —Å—Ç–æ–π–∫–∞–º –¥–ª—è –±—Ä–æ–Ω–∏\n"
                )

        buttons = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="ü™Ñ –ü–∞–ª–æ—á–∫–∞ –æ—Ç–ª–∞–¥–∫–∏", callback_data="debug_stick")],
            [InlineKeyboardButton(text="<- –ù–∞–∑–∞–¥", callback_data="start")]
        ])

        return {
            "text": text,
            "buttons": buttons
        }

    async def debug_stick_craft(self) -> dict[str: str]:
        text = ("ü™Ñ –ü–∞–ª–æ—á–∫–∞ –æ—Ç–ª–∞–¥–∫–∏ - <b>–ö—Ä–∞—Ñ—Ç</b>\n\n"
                "–†–µ—Å—É—Ä—Å—ã:\n"
                "‚Ä¢ –ê–ª–º–∞–∑ - 1\n"
                "‚Ä¢ –ü–∞–ª–∫–∞ - 2"
                )

        buttons = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="debug_stick"),
             InlineKeyboardButton(text="–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ", callback_data="debug_stick_use"),
             InlineKeyboardButton(text="–ü—Ä–∏–º–µ—Ä", callback_data="debug_stick_example")],
            [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–∞—è", callback_data="start"),
             InlineKeyboardButton(text="–ì–∞–π–¥—ã", callback_data="guides")]
        ])

        return {
            "text": text,
            "buttons": buttons
        }
    async def debug_stick(self) -> dict[str: str]:
        text = ("ü™Ñ –ü–∞–ª–æ—á–∫–∞ –æ—Ç–ª–∞–¥–∫–∏ - <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n\n"
                "–ü–∞–ª–æ—á–∫–∞ –æ—Ç–ª–∞–¥–∫–∏ - –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ —É–º–µ–ª—ã—Ö —Ä—É–∫–∞—Ö. –û–Ω–∞ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ–ª–æ–∫–æ–≤, —Ç–∞–∫–∏–µ –∫–∞–∫: –ø–æ–≤–æ—Ä–æ—Ç, –∑–∞—Ç–æ–ø–ª–µ–Ω–æ—Å—Ç—å, –≥–æ—Ä–µ–Ω–∏–µ –∏ —Ç–¥"
                )

        buttons = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ö—Ä–∞—Ñ—Ç", callback_data="debug_stick_craft"),
             InlineKeyboardButton(text="–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ", callback_data="debug_stick_use"),
             InlineKeyboardButton(text="–ü—Ä–∏–º–µ—Ä", callback_data="debug_stick_example")],
            [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–∞—è", callback_data="start"),
             InlineKeyboardButton(text="–ì–∞–π–¥—ã", callback_data="guides")]
        ])

        return {
            "text": text,
            "buttons": buttons
        }

    async def debug_stick_example(self) -> dict[str: str]:
        text = ("ü™Ñ –ü–∞–ª–æ—á–∫–∞ –æ—Ç–ª–∞–¥–∫–∏ - <b>–ü—Ä–∏–º–µ—Ä</b>\n\n"
                "–ö–∞–∫ –≤–∏–¥–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ:\n"
                "‚Ä¢ Zeragorn –≤—ã–±—Ä–∞–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –õ–ö–ú\n"
                "‚Ä¢ –ê –∑–∞—Ç–µ–º –∏–∑–º–µ–Ω–∏–ª –µ–≥–æ —Å False –Ω–∞ True\n\n"
                "–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º —Å –∑–∞–ø–∞–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –∑–∞–±–æ—Ä–∞ –ø–æ—è–≤–∏–ª–æ—Å—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ —Ç–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–µ –º–æ–≥–ª–æ"
                )

        buttons = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ö—Ä–∞—Ñ—Ç", callback_data="debug_stick_craft"),
             InlineKeyboardButton(text="–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ", callback_data="debug_stick_use"),
             InlineKeyboardButton(text="–û–ø–∏—Å–∞–Ω–∏–µ", callback_data="debug_stick")],
            [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–∞—è", callback_data="start"),
             InlineKeyboardButton(text="–ì–∞–π–¥—ã", callback_data="guides")]
        ])

        return {
            "text": text,
            "buttons": buttons
        }

    async def debug_stick_use(self) -> dict[str: str]:
        text = ("ü™Ñ –ü–∞–ª–æ—á–∫–∞ –æ—Ç–ª–∞–¥–∫–∏ - <b>–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ</b>\n\n"
                "–ü–∞–ª–æ—á–∫–∞ –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–µ–Ω—è—Ç—å <a href=\"https://minecraft.fandom.com/ru/wiki/%D0%A1%D0%BE%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D1%8F_%D0%B1%D0%BB%D0%BE%D0%BA%D0%BE%D0%B2\">—Å–æ—Å—Ç–æ—è–Ω–∏—è</a> "
                "–±–ª–æ–∫–æ–≤, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–µ –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –≤ –¥–µ–∫–æ—Ä–µ –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ\n\n"
                "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:\n"
                "‚Ä¢ –ü—Ä–∏ –∫–ª–∏–∫–µ –õ–ö–ú –ø–æ –±–ª–æ–∫—É –º–µ–Ω—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n"
                "‚Ä¢ –ü—Ä–∏ –∫–ª–∏–∫–µ –ü–ö–ú –ø–æ –±–ª–æ–∫—É –º–µ–Ω—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n"
                "‚Ä¢ –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤–º–µ—Å—Ç–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—é—Ç—Å—è –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ"
                )

        buttons = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ö—Ä–∞—Ñ—Ç", callback_data="debug_stick_craft"),
             InlineKeyboardButton(text="–ü—Ä–∏–º–µ—Ä", callback_data="debug_stick_example"),
             InlineKeyboardButton(text="–û–ø–∏—Å–∞–Ω–∏–µ", callback_data="debug_stick")],
            [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–∞—è", callback_data="start"),
             InlineKeyboardButton(text="–ì–∞–π–¥—ã", callback_data="guides")]
        ])

        return {
            "text": text,
            "buttons": buttons
        }
    async def gratitude(self) -> dict[str: str]:
        text = ("""
        –°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –≤—Å—ë, —á—Ç–æ –≤—ã —Å–¥–µ–ª–∞–ª–∏ –¥–ª—è –º–µ–Ω—è ‚ù§

‚Ä¢ Sonazavar209 ‚Äî –∑–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
‚Ä¢ Pamela ‚Äî –∑–∞ –º–æ—Ä–∞–ª—å–Ω—É—é –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—å, –∞ —Ç–∞–∫–∂–µ –∑–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—É—é –∫—Ä–∏—Ç–∏–∫—É
‚Ä¢ Clown_505 ‚Äî –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ —Ç—ë–ø–ª—ã–µ –æ—Ç–∑—ã–≤—ã –æ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ

–û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ Omlettik'—É ‚Äî –∏–º–µ–Ω–Ω–æ —Ç—ã —É–≥–æ–≤–æ—Ä–∏–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–≤—ã–π —Å–µ—Ä–≤–µ—Ä
        """)

        buttons = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="<- –ù–∞–∑–∞–¥ üíú", callback_data="start")]])

        return {
            "text": text,
            "buttons": buttons
        }